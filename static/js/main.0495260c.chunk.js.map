{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","toLocaleTimeString","this","timerID","setInterval","tick","clearInterval","setState","console","log","name","props","className","React","Component","App","isClockVisible","toggleVisibility","randomize","Math","floor","random","changeName","prevState","newName","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAiDeA,E,4MA7CbC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sB,kEAGE,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,O,6CAKFC,cAAcJ,KAAKC,W,6BAInBD,KAAKK,SAAS,CACZR,MAAM,IAAIC,MAAOC,uBAInBO,QAAQC,IAAIP,KAAKJ,MAAMC,Q,+BAGf,IACAA,EAASG,KAAKJ,MAAdC,KACAW,EAASR,KAAKS,MAAdD,KAER,OACE,yBAAKE,UAAU,SACb,6CACaF,IAEb,2BACGX,Q,GAnCSc,IAAMC,WCyDXC,G,kNAtDbjB,MAAQ,CACNkB,gBAAgB,EAChBN,KAAM,G,EAGRO,iBAAmB,WACjB,EAAKV,UAAS,SAAAT,GAAK,MAAK,CACtBkB,gBAAiBlB,EAAMkB,oB,EAI3BE,UAAY,kBAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAElCC,WAAa,kBACX,EAAKf,UAAS,SAACgB,GACb,IAAMC,EAAU,EAAKN,YAKrB,OAFAV,QAAQC,IAAR,qCAA0Cc,EAAUb,KAApD,eAA+Dc,IAExD,CACLd,KAAMc,O,uDAKF,IAAD,EAC0BtB,KAAKJ,MAA9BY,EADD,EACCA,KAAMM,EADP,EACOA,eAEd,OACE,yBAAKJ,UAAU,OACZI,EACG,kBAAC,EAAD,CAAON,KAAMA,IACb,yBAAKE,UAAU,kBAEnB,4BACEA,UAAU,cACVa,KAAK,SACLC,QAASxB,KAAKe,kBAEbD,EAAiB,OAAS,QAE7B,4BACEJ,UAAU,cACVa,KAAK,SACLC,QAASxB,KAAKoB,YAHhB,oB,GA3CUT,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0495260c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date().toLocaleTimeString(),\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(this.state.date);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"clock\">\n        <h1>\n          {`Clock #${name}`}\n        </h1>\n        <p>\n          {date}\n        </p>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './components/Clock/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: 0,\n  };\n\n  toggleVisibility = () => {\n    this.setState(state => ({\n      isClockVisible: !state.isClockVisible,\n    }));\n  };\n\n  randomize = () => Math.floor(Math.random() * 1000);\n\n  changeName = () => (\n    this.setState((prevState) => {\n      const newName = this.randomize();\n\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevState.name} to ${newName}`);\n\n      return {\n        name: newName,\n      };\n    })\n  );\n\n  render() {\n    const { name, isClockVisible } = this.state;\n\n    return (\n      <div className=\"app\">\n        {isClockVisible\n          ? <Clock name={name} />\n          : <div className=\"app__no-clock\" />\n        }\n        <button\n          className=\"app__button\"\n          type=\"button\"\n          onClick={this.toggleVisibility}\n        >\n          {isClockVisible ? 'Hide' : 'Show'}\n        </button>\n        <button\n          className=\"app__button\"\n          type=\"button\"\n          onClick={this.changeName}\n        >\n          Change name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}